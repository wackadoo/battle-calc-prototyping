<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Rules SYSTEM "rules.dtd">

<!-- WACK-A-DOO game rules. 

     These are the rules for the game Wack-A-Doo that uses the Augmentd Worlds
     Engine (AWE) developed by 5d lab. The rules in here need to be a
     well-formed document concerning AWE'S rules.dtd defining valid entities
     and properties. This document is used to automatically instantiate an
     appropriate database, ruby and C/C++ source files to be used inside the
     Augmented Worlds Engine. The contents of this file are also automatically
     communicated to a game client connecting to the game instance.
     
     Versioning: The versioning scheme of this file MUST adheren strictly to
                 the following rules in order to guarantee correct functioning
                 of ticker, backend and client:
                 
                 A) the version number consists of a major, minor and build 
                    number, all seperated by colons (major.minor.build).
                 B) with EVERY SINGLE edit & commit of this file the version
                    number has to be incremented.
                 C) The build number may be incremented for 'beautification'
                    changes. This are changes that don't change the game-logic
                    but only concern the meta information like names and 
                    descriptions.
                 D) The minor number has to be incremented for changes that
                    do concern the game mechanics, but that are small enough
                    to only need a reload of the rules by the client or a 
                    restart of the backend to be in sync again. Examples are
                    changes to attribute values or formulas. Introduction of
                    new entities (e.g. a new unit) or new attributes are no
                    examples of a minor change.
                 E) The major number has to be incremented for all changes 
                    that do not only need a reload to sync everything, but
                    that do or might need a change of source code, either
                    in backend or clients, or a modification of the database.
                    Examples are the introduction of a new unit (need a new
                    database field for that) or a new attribute (need to 
                    implement logic for this). 
                 F) When incrementing a minor of major version, the lower
                    numbers MUST be reset to zero (e.g. 1.283.13 would be 
                    incremented on the major to 2.0.0).
                  
                 A client would reload the rules when it detects a higher 
                 minor number on the server. It would reload itself when 
                 detecting a higher major number than expected in the hope
                 of finding a newer client-version that matches the rules
                 major number on the server. A client would do nothing for
                 a newer build, as those changes could be loaded with the 
                 next login.
                 
                 A server needs to be restarted for a new minor version to
                 take effect and to be in sync with ticker and clients. It
                 would not even start, if the rule's major version is higher
                 than expected, as the server would be likely to miss 
                 necessary database fields or game logic. The ticker behaves
                 exactly the same.
                 
                 ATTENTION: VERSION CHECKING IS NOT YET IMPLEMENTED, NOT IN
                            CLIENT, SERVER, NOR TICKER.
          
     Authors: David Canela <david@5dlab.com>,
              Sascha Lange <sascha@5dlab.com>,
              Patrick Fox <patrick@5dlab.com>,
              Hajo Runne <hajo@5dlab.com>
     
     All rights reserved, (c) 5D Lab GmbH, 2012. 
     
-->
<Rules xmlns:xi="http://www.w3.org/2001/XInclude">
  <General>
    <Game branch="development" tag="alpha">Wack-A-Doo</Game>
    <Version major="1" minor="0" build="0" />
    <Languages>
      <Language locale="en_US">English (US)</Language>
      <Language locale="de_DE">Deutsch</Language>
    </Languages>
  </General>
  <xi:include href="rules_settlements.xml" />
  <xi:include href="rules_units.xml"  />
  <xi:include href="rules_unitcategories.xml"  />
  <xi:include href="rules_buildings.xml"  />
</Rules>
